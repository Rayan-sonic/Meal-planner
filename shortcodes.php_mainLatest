<?php
/**
 * etp-shortcodes.php
 *
 * Handles shortcodes for the ETP Meal Planner
 *
 * @package ETP Meal Planner
 * @author  Matt Shaw <matt@expandedfronts.com>
 */

// Prevent direct access.
if ( ! defined( 'ABSPATH' ) ) exit;

/**
 * Displays the meal planner.
 * @return string
 */
function etp_render_meal_planner() {
//	wp_enqueue_script( 'etp-public-js' );
	
	wp_enqueue_script( 'etp-public-js', plugin_dir_url(__FILE__).'/etp-meal-planner/assets/js/etp-mp-public.js' );

	$plan_id = isset( $_GET['plan_id'] ) ? absint( $_GET['plan_id'] ) : 0;

	if ( $plan_id != 0 ) {
		$next_day = 8;
		$days = '
			<li><a class="etp-day-1 active" onclick="etp_load_day(1);">1</a></li>
			<li><a class="etp-day-2" onclick="etp_load_day(2);">2</a></li>
			<li><a class="etp-day-3" onclick="etp_load_day(3);">3</a></li>
			<li><a class="etp-day-4" onclick="etp_load_day(4);">4</a></li>
			<li><a class="etp-day-5" onclick="etp_load_day(5);">5</a></li>
			<li><a class="etp-day-6" onclick="etp_load_day(6);">6</a></li>
			<li><a class="etp-day-7" onclick="etp_load_day(7);">7</a></li>';
	} else {
		$next_day = 2;
		$days = '<li><a class="etp-day-1 active" onclick="etp_load_day(1);">1</a></li>';
	}


	$content = '';
	$content .= '<script src="' . ETP_MEAL_PLANNER_URL . 'assets/js/modernizr.custom.js?v=' . ETP_MEAL_PLANNER_VERSION . '"></script>';
	$content .= '<div id="etp-mp-top-nav" class="menu-new"><span style="float:left;margin-right:175px;"><a href="'. get_home_url() .'/meal-planner" class="etp-category remove-tags active new-home">Home</a> | <a href="javascript:void(0)" class="etp-category">Breakfast</a> | <a href="javascript:void(0)" class="etp-category">Lunch</a> | <a href="javascript:void(0)" class="etp-category">Dinner</a> | <a href="javascript:void(0)" class="etp-category">Snack</a> | <a href="javascript:void(0)" class="etp-category">Pre-WO</a> | <a href="javascript:void(0)" class="etp-category">Post-WO</a> | <a href="javascript:void(0)" class="etp-category">Pre-Bed</a></span>';
	$content .= '<input id="etp-recipe-search" type="text" name="etp_recipe_search" style="width:150px;" placeholder="Search tags..." /></div>';
	$content .= '<div id="grid" class="grid clearfix"></div>';

	$content .= '<div id="drop-area" class="drop-area">
	<a id="etp-minimize-button" style="margin-right: 10px;" href="javascript:void(0);" title="Minimize" class="etp-save-plan-btn minimize-new"><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/minimize_icon.png" /></a>
							<div class="etp-nav-wrap">

					<ul class="etp-day-nav">
						' . $days . '
						<li><a class="next" onclick="etp_add_day();">Add Day <i class="fa fa-plus-circle" aria-hidden="true"></i></a></li>
					</ul>

					<span id="etp-count-p">Calories: <span id="etp-cal-total" class="etp-count">0</span>
					Carbs: <span id="etp-carbs-total" class="etp-count">0</span>
					Fat: <span id="etp-fat-total" class="etp-count">0</span>
					Protein: <span id="etp-protein-total" class="etp-count">0</span>
					</span>


					<a href="' . get_admin_url() . 'admin-ajax.php?action=etp_save_prompt&plan_id=' . $plan_id .'&width=400&height=250" title="Save Plan" class="etp-save-plan-btn thickbox newclass"><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/save_icon.png" /> Save Plan</a>
				</div>

			<div id="etp-box-container" class="content">
				<div id="1" class="drop-area__item etp-drop-area"></div>
				<div id="2" class="drop-area__item etp-drop-area"></div>
				<div id="3" class="drop-area__item etp-drop-area"></div>
				<div id="4" class="drop-area__item etp-drop-area"></div>
				<div id="5" class="drop-area__item etp-drop-area"></div>
				<div id="etp-add-box" class="drop-area__item">
					<div class="etp-info-wrap dropped-info">
						<p>Add More Meals</p>
					</div>
				</div>
			</div>

		</div>
		<div class="drop-overlay"></div>
		<div id="data-store"></div>
		<input id="etp-current-day" type="hidden" value="1" />
		<input id="etp-next-day" type="hidden" value="' . $next_day . '" />
		<input id="etp-plan-id" type="hidden" value="' . $plan_id . '" />
		<script src="' . ETP_MEAL_PLANNER_URL . 'assets/js/draggabilly.pkgd.min.js?v=' . ETP_MEAL_PLANNER_VERSION . '"></script>
		<script src="' . ETP_MEAL_PLANNER_URL . 'assets/js/dragdrop.js?v=' . ETP_MEAL_PLANNER_VERSION . '"></script>';

	$content .= "
		<script>
			etp_get_recipes();
		</script>";

	return $content;
}

add_shortcode( 'etp_meal_planner', 'etp_render_meal_planner' );

/**
 * Displays meals saved by the current user.
 * @access public
 */
function etp_render_saved_plans() {
	global $wpdb;
	$table 	= ETP_Meal_Planner::table_name();
	$user 	= wp_get_current_user();
	$user 	= absint( $user->ID );
	$query 	= $wpdb->prepare( "SELECT id, meals, time, title FROM $table WHERE user_id = %d ORDER BY id DESC", $user );
	$plans 	= $wpdb->get_results( $query, ARRAY_A );
	$time 	= current_time( 'timestamp' );
	$return = '';

	$plan_detail_url = get_home_url() . '/plan-details/?plan=';

	foreach ( $plans as $plan ) {
		$plan_time = strtotime( $plan['time'] );
		if ( $plan['title'] == '' ) {
			$plan['title'] = '(No Title)';
		}
		$plan['title'] = esc_html( $plan['title'] );
		$return .= '<div class="sveplan" id="etp-plan-wrap-'. $plan['id'] . '"><div class="viewicn"><a class="etp-link" href="' . $plan_detail_url . $plan['id'] . '"><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/form.png"/></a></div><h3 style="margin-bottom: 0;"><a class="etp-link" href="' . $plan_detail_url . $plan['id'] . '">' . $plan['title'] . '</a></h3>
		<p style="font-style:italic; font-size: 14px;">'.'<a class="etp-link" href="' . get_home_url() . '/meal-planner/?plan_id=' . $plan['id'] .'">Edit</a> <a href="' . $plan_detail_url . $plan['id'] . '" class="etp-link pprint--- pprints---'.$plan['id'].'" id="'.$plan['id'].'">Print</a> <a href="javascript:void(0);" class="etp-link wait'.$plan['id'].'" style="display:none;">Wait</a> <a class="etp-link thickbox" href="' . get_admin_url() . 'admin-ajax.php?action=etp_delete_prompt&plan_id=' . $plan['id'] . '&width=375&height=200" title="Delete Plan" class="thickbox">Delete</a><p class="tym">'. human_time_diff( $plan_time, $time ) . ' ago</p></div>';
	}

	return $return;

}
add_shortcode( 'etp_saved_plans', 'etp_render_saved_plans' );

/**
 * Displays all recipes in the provided plan.
 * @access public
 */
function etp_render_plan_recipes() {
    global $wpdb;
	$plan_id 			= isset( $_GET['plan'] ) ? $_GET['plan'] : 0;
	$plan_id 			= absint( $plan_id );
	$recipe_ids 		= get_recipe_ids( $plan_id, true );

	$table 	= ETP_Meal_Planner::table_name();
	$user 	= wp_get_current_user();
	$user 	= absint( $user->ID );
	$query 	= $wpdb->prepare( "SELECT id, meals, time, title FROM $table WHERE user_id = %d AND id =$plan_id ORDER BY id DESC", $user );
	$plans 	= $wpdb->get_results( $query, ARRAY_A );
	$time 	= current_time( 'timestamp' );
	echo '<div class="right_line newone"><p><a href="https://blazebodyonline.com/plan-details/?plan='.$plan_id.'"><img class="wp-image-9880 alignleft" style="margin: 0;" src="' . ETP_MEAL_PLANNER_URL .'assets/img/back-to-details.png" alt="back to my plans" width="175" height="50"></a><a href="javascript:void(0);"><img class="alignleft wp-image-9876" style="margin: 0;" src="' . ETP_MEAL_PLANNER_URL .'assets/img/allprint-recipe.png" alt="Print Recipe" width="175" height="50"></a></p></div>';
    echo '<div class="intrtion"><em><p>Print each recipe individually using the print icon on each recipe card Or click the the button above to print one page containing all of the recipes show below.</p></em></div>';
    echo '<div class="plannme"><h2>'.$plans['0']['title'].'</h2></div>';

	$return = '';
	echo '<div class="content-newrpe">';
	foreach ( $recipe_ids as $id ) {
		$recipe 		= get_post( $id );
		$imagea = wp_get_attachment_image_src( get_post_thumbnail_id($id), '' );
		$imagesa=$imagea[0];
		if ($imagea[0]=="") {
			$imagesa="https://via.placeholder.com/150";
		}
		$ingredients 	= etp_get_ingredients( $id );
		$meta 			= get_post_meta( $id );
	    if ( $meta ) {
			$meta = unserialize( $meta['etp_recipe_meta'][0] );
		} else {
			$meta = array();
		}
/*echo $meta['cooktime'];
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa*/
		$return .= '<div class="cnt-rap" id="'.$id.'">';
		$return .= '<div id="custom-bg1" style="background-image: url('.$imagesa.')"></div>';
		$return .= '<h2>' . ucwords( $recipe->post_title ) . '</h2>';
		$return .= '<div class="info-new"><ul><li><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/clock.png"/></li><li>Prep<span>' . $meta['preptime'] . '</span></li>';
		$return .= '<li>Cook Time<span>' . $meta['cooktime'] . '</span></li>';
		$return .= '<li>Yield<span>' . $meta['yield'] . '</span></li>';
		$return .= '<li>Servings<span>' . $meta['servings'] . '</span></li>';
		$return .= '<li><a class="viwprintsp" id="'.$id.'" href="javascript:void(0);"><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/prnt.jpg"/></a></li></ul></div>';
		$return .= '<h3>Ingredients</h3>';
		if ( is_array( $ingredients ) && ! empty( $ingredients ) ) {

			$return .= '<ul class="etp-recipe-ingredients">';

			foreach ( $ingredients as $ingredient ) {
				$return .= '<li>' . $ingredient['amount'] . ' ' . $ingredient['unit'] . ' '  . $ingredient['ingredient'] . '</li>';
			}

			$return .= '</ul>';
		} else {
			$return .= '<p>No ingredients found</p>';
		}

		$return .= '<h3>Instructions</h3>';
		$return .= wpautop( $recipe->post_content );

		$return .= '</div>';
	}

	return $return;
}
add_shortcode( 'etp_plan_recipes', 'etp_render_plan_recipes' );

/**
 * Displays a single recipe.
 * @access public
 */
function etp_view_recipe( $id = 0 ) {
	$return = '';

	$recipe_id 			= isset( $_GET['recipe'] ) ? $_GET['recipe'] : 0;
	$planId 			= isset( $_GET['planId'] ) ? $_GET['planId'] : 0;
	$planIds			= absint( $_GET['planId'] ) ? $_GET['planId'] : 0;
	$recipe_id 			= absint( $recipe_id );

	// Allows manual usage.
	if ( $id != 0 ) {
		$recipe_id = absint( $id );
	}

	// Get the recipe and its ingredients.
	$recipe 		= get_post( $recipe_id );
	$recipe_meta 	= get_post_meta( $recipe_id );

	if ( $recipe_meta ) {
		$recipe_meta = unserialize( $recipe_meta['etp_recipe_meta'][0] );
	} else {
		$recipe_meta = array();
	}

	$ingredients = etp_get_ingredients( $recipe_id );
	$return .= '<p class="right_line newone"><a href="#"><img class="wp-image-9876 alignleft" style="margin: 0;" src="'. ETP_MEAL_PLANNER_URL. 'assets/img/print-recipe.png" alt="Print Recipe" width="175" height="50" /></a> <a href="https://blazebodyonline.com/plan-details/?plan='.$planIds.'"><img class="wp-image-9880 alignleft" style="margin: 0;" src="' . ETP_MEAL_PLANNER_URL .'assets/img/back-to-details.png" alt="back to my plans" width="175" height="50" /></a></p>';

	 $return .= '<h2>' . ucwords( $recipe->post_title ) . '</h2>';

	$return .= get_the_post_thumbnail( $recipe_id, 'medium' );
	$return .= '<br>';

	if ( isset( $recipe_meta['preptime'] ) && $recipe_meta['preptime'] != '' ) {
		$return .= '<strong>Prep Time:</strong> ' . $recipe_meta['preptime'] . '<br />';
	}

	if ( isset( $recipe_meta['cooktime'] ) && $recipe_meta['cooktime'] != '' ) {
		$return .= '<strong>Cook Time:</strong> ' . $recipe_meta['cooktime'] . '<br />';
	}

	if ( isset( $recipe_meta['yield'] ) && $recipe_meta['yield'] != '' ) {
		$return .= '<strong>Yield:</strong> ' . $recipe_meta['yield'] . '<br />';
	}

	if ( isset( $recipe_meta['servings'] ) && $recipe_meta['servings'] != '' ) {
		$return .= '<strong>Servings:</strong> ' . $recipe_meta['servings'] . '<br />';
	}


	$return .= '<h3>Ingredients</h3>';

	if ( is_array( $ingredients ) && ! empty( $ingredients ) ) {

		$return .= '<ul class="etp-recipe-ingredients">';

		foreach ( $ingredients as $ingredient ) {
			$return .= '<li>' . $ingredient['amount'] . ' ' . $ingredient['unit'] . ' '  . $ingredient['ingredient'] . '</li>';
		}

		$return .= '</ul>';
	} else {
		$return .= '<p>No ingredients found</p>';
	}

	$return .= '<h3>Instructions</h3>';
	$return .= wpautop( $recipe->post_content );






	$return .= '<br><br>';

	// Return the recipe content.
	return $return;
}
add_shortcode( 'etp_view_recipe', 'etp_view_recipe' );

/**
 * Displays the shopping list for the provided plan.
 * @access public
 */
function etp_render_shopping_list() {
	$plan_id 			= isset( $_GET['plan'] ) ? $_GET['plan'] : 0;
	$plan_id 			= absint( $plan_id );
	$recipe_ids 		= get_recipe_ids( $plan_id );
	$all_ingredients 	= array();
	$return 			= '';
	$should_exclude 	= false;

	if ( ! is_array( $recipe_ids ) ) return;

	foreach ( $recipe_ids as $recipe_id ) {
		$ingredients = etp_get_ingredients( $recipe_id );
		if ( !is_array( $ingredients ) ) {
			$ingredients = array();
		}

		foreach ( $ingredients as $ingredient ) {

			$c = 0;
			foreach ( $all_ingredients as $sub_ingredient ) {

				if ( in_array( $ingredient['ingredient'], array_values( $sub_ingredient ) ) ) {

					if ( $ingredient['unit'] == $sub_ingredient['unit'] ) {

						if ( strpos($ingredient['amount'], '/') === false && strpos($sub_ingredient['amount'], '/') === false ) {
							if (is_numeric($sub_ingredient['amount']) && is_numeric($ingredient['amount'])) {
								$all_ingredients[$c]['amount'] = $sub_ingredient['amount'] + $ingredient['amount'];
								$should_exclude = true;
								break;
							}
						}

					}

				}

				$c++;
			}

			if ( false === $should_exclude ) {
				$all_ingredients[] = $ingredient;
			} else {
				$should_exclude = false;
			}

		}
	}

	function etp_usort( $a, $b ) {
		return strcmp( $a['category'], $b['category'] );
	}
	usort( $all_ingredients, 'etp_usort' );
	function float2rat($n, $tolerance = 1.e-6) {
	    $h1=1; $h2=0;
	    $k1=0; $k2=1;
	    $b = 1/$n;
	    do {
	        $b = 1/$b;
	        $a = floor($b);
	        $aux = $h1; $h1 = $a*$h1+$h2; $h2 = $aux;
	        $aux = $k1; $k1 = $a*$k1+$k2; $k2 = $aux;
	        $b = $b-$a;
	    } while (abs($n-$h1/$k1) > $n*$tolerance);

	    return "$h1/$k1";
	}

	$c 		= 0;
	$cat 	= '';
	$strArray = array();
	foreach ( $all_ingredients as $ingredient ) {

		
		$string =  $ingredient['ingredient'];
		$amount =  $ingredient['amount'];

        $str_arr = explode (",", $string);
        $amVlaue = explode ("/", $amount);
        if($amVlaue[1] > 0){
			$actualvalue = (int)$amVlaue[0]/(int)$amVlaue[1];
		}else{
			$actualvalue = (int)$amVlaue[0]/1;
		} 
  		if (array_key_exists($str_arr['0'],$strArray))
		  {
		  $newamount = $strArray[$str_arr['0']]['amount'] + $actualvalue;
		  $strArray[$str_arr['0']] = array('string' => $ingredient,'amount' => $newamount);
		  }
		else
		  {
		  $strArray[$str_arr['0']] = array('string' => $ingredient,'amount' => $actualvalue );
		  }
        
   

//echo $str_arr['0'].'<br>';
       /* 

        echo   $amount.'<br>';*/


		// if ( $ingredient['ingredient'] != '' ) {
		// 	if ( $c === 0 ) {
		// 		$cat 	= $ingredient['category'];
		// 		$return .= '<div class="selectAllNew"><input type="checkbox" onClick="toggle(this)" class="" id="slet"/> Select All</div>';
		// 		$return .= '<h3>' . ucwords( $cat ) . '</h3>';
		// 		$return .= "<ul class='etp-shopping-list'>";
		// 		$return .= "<li><input id='etp-ingredient-$c' name='selectall' value='". $ingredient['amount'] . ' ' . $ingredient['unit'] . ' ' . $ingredient['ingredient'] . "' type='checkbox' class='etp-ingredient-cb'  /><label class='etp-ingredient-label' for='etp-ingredient-$c'>" . $ingredient['amount'] . ' ' . $ingredient['unit'] . ' ' . $ingredient['ingredient'] . "</label></li>";
		// 	} elseif ( $cat != $ingredient['category'] ) {
		// 		$cat = $ingredient['category'];
		// 		$return .= '</ul>';
		// 		$return .= '<h3>' . ucwords( $cat ) . '</h3>';
		// 		$return .= '<ul class="etp-shopping-list">';
		// 		$return .= "<li><input id='etp-ingredient-$c' name='selectall' value='". $ingredient['amount'] . ' ' . $ingredient['unit'] . ' ' . $ingredient['ingredient'] . "' type='checkbox' class='etp-ingredient-cb'  /><label class='etp-ingredient-label' for='etp-ingredient-$c'>" . $ingredient['amount'] . ' ' . $ingredient['unit'] . ' ' . $ingredient['ingredient'] . "</label></li>";
		// 	} else {
		// 		$return .= "<li><input id='etp-ingredient-$c' value='". $ingredient['amount'] . ' ' . $ingredient['unit'] . ' ' . $ingredient['ingredient'] . "' name='selectall' type='checkbox' class='etp-ingredient-cb'  /><label class='etp-ingredient-label' for='etp-ingredient-$c'>" . $ingredient['amount'] . ' ' . $ingredient['unit'] . ' ' . $ingredient['ingredient'] . "</label></li>";
		// 	}

		// }

		// $c++;
	}
	foreach ( $strArray as $ingredientValue ) {
			// echo "<pre>";
			// print_r($ingredientValue);
			// echo "</pre>";
		if (is_float($ingredientValue['amount']))
		{
					$whole = floor($ingredientValue['amount']);      // 1
					$fraction = $ingredientValue['amount'] - $whole; // .25
					if((int)$ingredientValue['amount'] > 0){
						$amo = (int)$ingredientValue['amount'] + $fraction;
					}else{
						$amo = $ingredientValue['amount'];
					}
		}else{
			$amo = $ingredientValue['amount'];
		}
			if ( $ingredientValue['string']['ingredient'] != '' ) {
			if ( $c === 0 ) {
				$cat 	= $ingredientValue['string']['category'];
				$return .= '<div class="selectAllNew"><input type="checkbox" onClick="toggle(this)" class="" id="slet"/> Select All</div>';
				$return .= '<h3>' . ucwords( $cat ) . '</h3>';
				$return .= "<ul class='etp-shopping-list'>";
				$return .= "<li><input id='etp-ingredient-$c' name='selectall' value='". $amo . ' ' . $ingredientValue['string']['unit'] . ' ' . $ingredientValue['string']['ingredient'] . "' type='checkbox' class='etp-ingredient-cb'  /><label class='etp-ingredient-label' for='etp-ingredient-$c'>" . $amo . ' ' . $ingredientValue['string']['unit'] . ' ' . $ingredientValue['string']['ingredient'] . "</label></li>";
			} elseif ( $cat != $ingredientValue['string']['category'] ) {
				$cat = $ingredientValue['string']['category'];
				$return .= '</ul>';
				$return .= '<h3>' . ucwords( $cat ) . '</h3>';
				$return .= '<ul class="etp-shopping-list">';
				$return .= "<li><input id='etp-ingredient-$c' name='selectall' value='". $amo . ' ' . $ingredientValue['string']['unit'] . ' ' . $ingredientValue['string']['ingredient'] . "' type='checkbox' class='etp-ingredient-cb'  /><label class='etp-ingredient-label' for='etp-ingredient-$c'>" . $amo . ' ' . $ingredientValue['string']['unit'] . ' ' . $ingredientValue['string']['ingredient'] . "</label></li>";
			} else {
				$return .= "<li><input id='etp-ingredient-$c' value='". $amo . ' ' . $ingredientValue['string']['unit'] . ' ' . $ingredientValue['string']['ingredient'] . "' name='selectall' type='checkbox' class='etp-ingredient-cb'  /><label class='etp-ingredient-label' for='etp-ingredient-$c'>" . $amo . ' ' . $ingredientValue['string']['unit'] . ' ' . $ingredientValue['string']['ingredient'] . "</label></li>";
			}

		}

		$c++;

	}
	$return .= '</ul>';

	return $return;
}
add_shortcode( 'etp_render_shopping_list', 'etp_render_shopping_list' );

/**
 * Displays the plan summary page.
 * @access public
 */
function etp_render_plan_summary() {
	global $wpdb;

	$plan_id 	= isset( $_GET['plan'] ) ? $_GET['plan'] : 0;
	$plan_id 	= absint( $plan_id );
	$table 		= ETP_Meal_Planner::table_name();
	$data 		= $wpdb->get_results( "SELECT id, meals, user_id, time FROM $table WHERE id = '$plan_id'", ARRAY_A );

	if ( ! $data ) return;

	$days = unserialize( $data[0]['meals'] );

	$return = '<p class="right_line"><a class="etp-link" href="' . get_home_url() . '/meal-planner/?plan_id=' . $plan_id . '"><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/edit-plan.png"></a> <a class="etp-link" href="' . get_home_url() . '/shopping-list/?plan=' . $plan_id . '"><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/view-shopping-list.png" /></a> <a class="etp-link" href="' . get_home_url() . '/plan-recipes/?plan=' . $plan_id . '"><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/view-recipe-list.png" /></a> <a class="etp-link" href="' . get_home_url() . '/my-plans/"><img src="' . ETP_MEAL_PLANNER_URL .'assets/img/view-saved-plans.png" style="width:175px;"/></a></p><div class="intrtion"><p>To view or print your recipe, click on the recipe image.</p></div>';

	foreach ( $days as $day => $meals ) {

		$return .= "<div class='allcont'><h4>Day $day</h4><div class='dysall' style='display:none;'>";

		$meals = array_keys( array_flip( $meals ) );

		foreach ( $meals as $meal_id ) {
			$return .="<p><a class='etp-link' href='" . get_home_url() . '/view-recipe/?recipe=' . $meal_id . "'>View/Print Recipe for " . get_the_title( $meal_id ) . "</a></p>";
		}
		$return .="</div><div class='alsrpt'>";
		foreach ( $meals as $meal_ids ) {
			$image = wp_get_attachment_image_src( get_post_thumbnail_id($meal_ids), '' );
			$images=$image[0];
			if ($image[0]=="") {
				$images="https://via.placeholder.com/200x200.png";
			}
			$return .="<div class='newdtails'><a class='etp-link' href='" . get_home_url() . '/view-recipe/?recipe='. $meal_ids.'&planId='.$plan_id."'><div id='custom-bg' style='background-image: url(".$images.")'></div></a><p>" . get_the_title( $meal_ids ) . "</p></div>";
		}
        $return .="</div></div>";

	}

	return $return;
}
add_shortcode( 'etp_render_plan_summary', 'etp_render_plan_summary' );

